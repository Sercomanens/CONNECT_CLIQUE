<div class="container mt-4" data-controller="toggle-form">
  <div class="show-activity-card">
    <h2 class="show-activity-title"><%= @activity.name %></h2>
    <p class="show-activity-detail mb-4"><strong>Description:</strong> <%= @activity.description %></p>

    <% if @activity.voting_closed %>
      <p class="show-activity-detail">
        <strong>Date of Activity:</strong>
        <span class="text-success"><%= @activity.winning_date %> âœ…</span>
      </p>
      <% if @activity.start_time.present? && @activity.end_time.present? %>
        <p class="show-activity-detail">
          <strong>Time of Activity:</strong>
          <%= @activity.start_time.strftime("%H:%M %p") %> - <%= @activity.end_time.strftime("%H:%M %p") %>
        </p>
      <% end %>
    <% end %>

    <!-- Display photos -->
    <div id="carouselExample" class="carousel slide carousel-container" data-bs-ride="carousel">
      <div class="carousel-inner">
        <% @activity.photos.each_with_index do |photo, index| %>
          <div class="carousel-item <%= 'active' if index == 0 %>">
            <%= cl_image_tag photo.key, height: 300, width: 400, crop: :pad, class: 'd-block w-100' %>
          </div>
        <% end %>
      </div>
      <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
      </button>
      <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
      </button>
    </div>

    <!-- Edit and Vote links -->
    <div class="btn-container">
      <% if current_user == @activity.user && !@activity.voting_closed %>
        <% if !current_user.votes.exists?(activity: @activity) %>
          <button data-action="click->toggle-form#fire" class="btn2">Vote</button>
        <% end %>
        <%= button_to 'Close Vote', close_voting_activity_path(@activity), method: :post, class: 'btn2' %>
      <% end %>
      <% if policy(@activity).edit? %>
        <%= link_to 'Edit', edit_activity_path(@activity), class: 'btn2' %>
      <% end %>
      <%= link_to 'Back', activities_path, class: 'btn2' %>
    </div>

    <!-- Voting options (hidden by default) -->
    <div data-toggle-form-target="togglableElement" class="d-none py-4 px-3 rounded">
      <%= form_with(model: [@activity, @vote], local: false, id: 'vote-form') do |f| %>
        <div class="form-check">
          <%= f.radio_button :selected_date, @activity.date_1, class: 'form-check-input' %>
          <%= f.label :selected_date, @activity.date_1, value: @activity.date_1, class: 'form-check-label' %>
        </div>
        <div class="form-check">
          <%= f.radio_button :selected_date, @activity.date_2, class: 'form-check-input' %>
          <%= f.label :selected_date, @activity.date_2, value: @activity.date_2, class: 'form-check-label' %>
        </div>
        <div class="form-check">
          <%= f.radio_button :selected_date, @activity.date_3, class: 'form-check-input' %>
          <%= f.label :selected_date, @activity.date_3, value: @activity.date_3, class: 'form-check-label' %>
        </div>
        <%= f.submit 'Submit Vote', class: 'btn1 mt-2' %>
      <% end %>
    </div>

    <!-- Message display area -->
    <div id="message-display" class="mt-3"></div>
  </div>

  <!-- Map display -->
  <div id="map" class="map-container"
       data-controller="map"
       data-map-markers-value="<%= @markers.to_json %>"
       data-map-api-key-value="<%= ENV['MAPBOX_API_KEY'] %>"></div>
</div>

<script>
document.addEventListener('turbo:load', () => {
  const form = document.getElementById('vote-form');
  const messageDisplay = document.getElementById('message-display');

  if (form) {
    form.addEventListener('submit', function(event) {
      event.preventDefault();

      fetch(this.action, {
        method: 'POST',
        body: new FormData(this),
        headers: {
          'X-Requested-With': 'XMLHttpRequest',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
          'Accept': 'application/json'
        },
        credentials: 'same-origin'
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          messageDisplay.innerHTML = `<div class="alert alert-success">${data.message}</div>`;
          const togglableElement = document.querySelector('[data-toggle-form-target="togglableElement"]');
          if (togglableElement) {
            togglableElement.classList.add('d-none');
          }
        } else {
          messageDisplay.innerHTML = `<div class="alert alert-danger">${data.errors.join(', ')}</div>`;
        }
      })
      .catch(error => {
        console.error('Error:', error);
        messageDisplay.innerHTML = '<div class="alert alert-danger">An error occurred while submitting the form. Please try again.</div>';
      });
    });
  }
});
</script>
